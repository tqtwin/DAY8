swagger: "2.0"
info:
  contact: {}
  description: This is a sample Gin server with GORM and Redis
  title: Gin-GORM-Redis API
  version: "1.0"
paths:
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new user
  /posts:
    get:
      description: Get a list of all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
      summary: Get all posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
      summary: Create a new post
  /posts/{id}:
    delete:
      description: Delete a specific post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: Delete a post by ID
    get:
      description: Get a specific post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Get a post by ID
    put:
      consumes:
      - application/json
      description: Update a specific post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Update a post by ID
definitions:
  models.User:
    properties:
      bio:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    type: object
  models.Post:
    properties:
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
